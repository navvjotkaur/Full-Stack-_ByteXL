<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dockerized React App</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <style>
        body { font-family: 'Inter', sans-serif; }
    </style>
</head>
<body>
    <div id="root"></div>

    <script type="text/babel">
        const { useState } = React;

        const App = () => {
            const [message, setMessage] = useState("Ready for Deployment!");

            return (
                <div className="min-h-screen flex items-center justify-center bg-gray-900 p-4">
                    <div className="bg-white p-8 rounded-xl shadow-2xl text-center max-w-lg w-full">
                        <h1 className="text-5xl font-extrabold text-indigo-600 mb-4">
                            Hello, Docker!
                        </h1>
                        <p className="text-xl text-gray-700 mb-6">
                            This React application is being served by Nginx in a tiny container.
                        </p>
                        <p className="text-2xl font-mono text-gray-800 border-t pt-4 mt-4">
                            Status: <span className="text-green-500 font-semibold">{message}</span>
                        </p>
                        <button
                            onClick={() => setMessage("State updated in Docker!")}
                            className="mt-6 px-6 py-2 bg-pink-500 text-white font-bold rounded-lg shadow-md hover:bg-pink-600 transition duration-150 transform hover:scale-105"
                        >
                            Click to Update State
                        </button>
                    </div>
                </div>
            );
        };

        const container = document.getElementById('root');
        const root = ReactDOM.createRoot(container);
        root.render(<App />);
    </script>
</body>
</html>
